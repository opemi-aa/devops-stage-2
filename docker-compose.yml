version: '3.8'

services:
  frontend:
    image: frontend-image
    build:
      context: ./frontend
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`your-frontend-domain`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  backend:
    image: backend-image
    build:
      context: ./backend
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/mydatabase
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`your-backend-domain`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  proxy:
    image: traefik:v2.9
    ports:
      - "8090:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host(`proxy.domain`)"
      - "traefik.http.routers.proxy.entrypoints=web"
      - "traefik.http.routers.proxy.entrypoints=websecure"
      - "traefik.http.routers.proxy.tls.certresolver=myresolver"
      - "traefik.http.services.proxy.loadbalancer.server.port=80"

  adminer:
    image: adminer:latest
    environment:
      - ADMINER_DEFAULT_SERVER=db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.domain`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    depends_on:
      - db

  db:
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

volumes:
  pgdata:
